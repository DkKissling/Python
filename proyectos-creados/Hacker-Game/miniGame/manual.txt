Manual de Usuario: Cibermisión: Terminal Hacker

1. Introducción
   Bienvenido a **Cibermisión: Terminal Hacker**, un juego retro de simulación de hacking desarrollado con Pygame. Te pones en la piel de un agente de ciberseguridad en el año 2055 que debe detener a un intruso antes de que robe información confidencial.

2. Requisitos del Sistema

   * Python 3.x
   * Pygame instalado (`pip install pygame`)
   * Archivos de datos JSON:

     * `emails.json` (colección de correos)
     * `palabras.json` (para Brute Force)
     * `confidencial.json` (para Cipher Sprint)

3. Instalación y Estructura de Archivos
   Coloca el archivo `game2.py` junto a las carpetas o archivos JSON:

   ```
   /ruta_al_juego/
     ├ game2.py
     ├ emails.json
     ├ palabras.json
     └ confidencial.json
   ```

4. Cómo Iniciar el Juego
   Desde la terminal o consola, navega hasta la carpeta del juego y ejecuta:

   ```bash
   python game2.py
   ```

   Aparecerá la pantalla de inicio con animaciones retro estilo Matrix.

5. Menú de Inicio

   * Al cargar primero verás varias líneas de arranque.
   * Después, escribe `LOGIN` o `START` y presiona **Enter** para comenzar.
   * Para salir, escribe `EXIT` o `QUIT`.

6. Pantalla de Login

   * Ingresa tu **usuario** y presiona Enter.
   * Ingresa tu **contraseña** (oculta con asteriscos) y presiona Enter.
   * Credenciales válidas:

     * `admin` / `1234`
     * `guest` / `guest`
     * `user`  / `passworder`
   * Tienes 3 intentos; al fallar, regresarás al menú principal.

7. Terminal de Comandos
   Tras un login exitoso, entras en el terminal principal.

   7.1 Historial

   * Muestra los últimos 15 comandos.
   * Mensaje inicial: `$ SISTEMA INICIADO`, luego `$ ESPERANDO COMANDOS...`.

   7.2 Comandos Válidos

   ```
   connect [IP] -u [usuario]   : Conectar a un sistema remoto
   ssh [IP]                     : Establecer conexión segura
   access [IP] --bypass         : Intento de acceso privilegiado
   scan [IP]                    : Escaneo de red
   run [PROGRAMA] [DESTINO]     : Ejecutar programa en host remoto
   exec [SCRIPT]                : Ejecutar scripts locales
   sudo [comando]               : Ejecutar con permisos de superusuario
   help                         : Lista de comandos y sintaxis
   clear                        : Limpia la pantalla
   ls                           : Lista archivos/directorios
   cd [ruta]                    : Cambiar directorio (no interactivo)
   cat [archivo]                : Mostrar contenido de archivos de texto
   ```

   * **Tips**: Es posible usar `help` para ver la sintaxis específica de cada comando y un mensaje contextual con la IP objetivo.

8. Niveles / Módulos del Juego
   Cada nivel añade un mini-juego:

   * **Brute Force** (nivel 1)

     * Conecta con: `connect 10.0.3.55 -u admin`
     * Descifra la contraseña letra a letra con un max. de 5 errores.

   * **Binary Crack** (nivel 2)

     * Ejecuta: `sudo access 172.16.254.1 --bypass`
     * Traduce códigos binarios a caracteres. Tienes 3 intentos por carácter.
     * Pulsa **TAB** para ver la tabla ASCII–binario.

   * **Cipher Sprint** (nivel 3)

     * Ejecuta: `run CHAOS.EXE 192.168.7.1`
     * Intercepta 5 palabras clave antes de que expire el tiempo (60s) o agoten intentos (5).

9. Visualizador de Emails

   * Usa `ls` para listar el directorio `emails/`.
   * Usa `cat emails/01_anonymous_warning.txt` (0s opcionales) para abrir un email.
   * Navega con **UP/DOWN** o **ESC/ENTER** para salir.

10. Pantalla de Victoria

    * Tras completar Cipher Sprint, verás la animación final y mensaje de victoria.
    * Presiona **Enter** o haz clic en "VOLVER AL INICIO" para reiniciar.

11. Controles Generales

    * **Enter**: Confirmar/avanzar.
    * **Backspace**: Borrar carácter.
    * **Escape (Esc)**: Abortar o volver al menú anterior.
    * **Tab**: Mostrar ayuda dentro de Binary Crack.

12. Consejos y Ayuda

    * Si un comando produce error, usa `help` para ver opciones.
    * `clear` refresca la pantalla y reinicia el historial.
    * Mantén pulsado Enter para saltar animaciones de texto.

13. Créditos y Licencia
    Juego creado por \[Tu Nombre].
    Código bajo licencia MIT.

¡Buena suerte, agente! Mantén la seguridad del sistema intacta.
